<resources>
    <string name="app_name">JsEvaluator Tests</string>
    <string name="action_settings">Settings</string>
    <string name="hello_world">Hello world!</string>
    <string name="title_activity_evaluate_js_string">Evaluate JS string</string>
    <string name="evaluate_js_test">Evaluate js test</string>
    <string name="edit_js_text">Math.sqrt(2 * 8);</string>
    <string name="evaluate_button_text">Evaluate</string>
    <string name="destroy_button_text">Destroy</string>
    <string name="title_activity_call_js_function">Call JS function</string>
    <string name="call_function_button">Call js function test</string>
    <string name="js_function_edit_text">function greet(name) { return \"Hello, \" + name; }</string>
    <string name="js_function_label">Function code:</string>
    <string name="js_parameter_label">Parameter value:</string>
    <string name="js_parameter_edit_text">World</string>
    <string name="call_function_evaluate_button_text">Call function</string>
    <string name="stress_test_button">Run stress test</string>
    <string name="title_activity_stress_test">Stress test</string>
    <string name="stress_test_button_text">Run stress test</string>
    <string name="js_stree_test_caption">The purpose of this test is to evaluate two very large (100K) JavaScript functions and then call one.</string>
    <string name="title_activity_real_library">Run Real Library</string>
    <string name="run_real_library_button">Run Real Library</string>
    <string name="run_library_caption">Loads real libraries (jQuery and CryptoJs) and calls their functions.</string>
    <string name="title_activity_character_escape">Character escape</string>
    <string name="open_cahracter_escape_button">Character escape test</string>
    <string name="open_percent_character_button" formatted="false">% character test</string>
    <string name="open_line_endings" formatted="false">Line endings test</string>
    <string name="open_destroy_endings" formatted="false">Destroy test</string>
    <string name="character_escape_overview">Test usage of characters like quotes, new lines. Don\'t worry if it looks overwhelming. This gobbledigook is verified by a unit test.</string>
    <string name="destroy_test_overview">Test of the destroy method which destroys the web view and clears the memory. Evaluating JavaScript after destroying should result in a crash.</string>
    <string name="character_escape_js_code">function greet(name) { return \&quot;multiline: \\\n newline: \\n apostrophe: \' quote: \\\&quot; slashes: \\/\\\\/ closing tag: &lt;/script&gt; unicode: 日本 \&quot; + \'characters: !@#$%^&amp;*()-=_+`~&lt;&gt;? \\n#####\\n\' + name; }</string>
    <string name="character_escape_parameter">multiline: \n newline: \\n apostrophe: \' quote: \&quot; slashes: \\/\\\\/ closing tag: &lt;/script&gt; unicode: 日本 characters: !@#$%^&amp;*()-=_+`~&lt;&gt;?</string>
    <string name="character_escape_call_function_evaluate_button_text">Run</string>
    <string name="title_activity_percentage" formatted="false">% character test</string>
    <string name="percetage_test_caption">The test ensures the percent character is properly handled both when it\'s used as an operator and when it occurs in a string. This test ensures the percent character is treated as it is and not as a percent encoding sytax (i.e. %7E should not mean \'~\').</string>
    <string name="percetage_js_code" formatted="false">5%12 + \'%7E 12.5% growth\'</string>
    <string name="percetage_code_word">JS Code to valuate:</string>
    <string name="line_endings_caption">Evaluate JavaScript code containing both CR, LF characters and their combinations:</string>
    <string name="title_activity_line_endings">Line endings test</string>
</resources>
